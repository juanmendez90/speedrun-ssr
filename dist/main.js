!function(e){function t(t){for(var r,i,u=t[0],c=t[1],l=t[2],f=0,d=[];f<u.length;f++)i=u[f],o[i]&&d.push(o[i][0]),o[i]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(s&&s(t);d.length;)d.shift()();return a.push.apply(a,l||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],r=!0,u=1;u<n.length;u++){var c=n[u];0!==o[c]&&(r=!1)}r&&(a.splice(t--,1),e=i(i.s=n[0]))}return e}var r={},o={1:0},a=[];function i(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.e=function(e){var t=[],n=o[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise(function(t,r){n=o[e]=[t,r]});t.push(n[2]=r);var a,u=document.getElementsByTagName("head")[0],c=document.createElement("script");c.charset="utf-8",c.timeout=120,i.nc&&c.setAttribute("nonce",i.nc),c.src=function(e){return i.p+""+({}[e]||e)+".bundle.js"}(e),a=function(t){c.onerror=c.onload=null,clearTimeout(l);var n=o[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src,i=new Error("Loading chunk "+e+" failed.\n("+r+": "+a+")");i.type=r,i.request=a,n[1](i)}o[e]=void 0}};var l=setTimeout(function(){a({type:"timeout",target:c})},12e4);c.onerror=c.onload=a,u.appendChild(c)}return Promise.all(t)},i.m=e,i.c=r,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/dist/",i.oe=function(e){throw console.error(e),e};var u=window.webpackJsonp=window.webpackJsonp||[],c=u.push.bind(u);u.push=t,u=u.slice();for(var l=0;l<u.length;l++)t(u[l]);var s=c;a.push([197,0]),n()}({19:function(e,t,n){"use strict";n.d(t,"b",function(){return r}),n.d(t,"d",function(){return o}),n.d(t,"c",function(){return a}),n.d(t,"a",function(){return i}),n.d(t,"f",function(){return u}),n.d(t,"e",function(){return c});var r="games/LOAD_GAMES",o="games/LOAD_GAMES_RECEIVED",a="games/LOAD_GAMES_FAILED",i="games/LOAD_GAME",u="games/LOAD_GAME_RECEIVED",c="games/LOAD_GAME_FAILED"},197:function(e,t,n){"use strict";n.r(t);var r=n(2),o=n.n(r),a=n(23),i=n(24),u=n.n(i),c=n(340),l=n(44),s=n(339),f=n(338),d=n(1),p=n.n(d),m=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var g=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.a.PureComponent),m(t,[{key:"render",value:function(){var e=this.props.route.routes;return o.a.createElement("div",null,o.a.createElement(f.a,{to:"/"},"Games"),Object(s.a)(e))}}]),t}(),b=g;g.propTypes={route:p.a.shape({routes:p.a.arrayOf(p.a.shape({path:p.a.string}))}).isRequired};var h=n(33),y=[{component:b,path:"/",routes:[{path:"/",exact:!0,component:u()({loader:function(){return Promise.all([n.e(0),n.e(3)]).then(n.bind(null,346))},loading:h.a})},{path:"/game/:id",component:u()({loader:function(){return Promise.all([n.e(0),n.e(2)]).then(n.bind(null,347))},loading:h.a})}]}],v=n(18),O=n(71),E=n(19),w=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},_={isLoading:!1,isLoadingGame:!1,games:[],game:null,error:""},j=Object(v.c)({gamesReducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_,t=arguments[1],n=t.type,r=t.data;switch(n){case E.b:return w({},e,{isLoading:!0,error:""});case E.d:return w({},e,{isLoading:!1,games:r});case E.c:return w({},e,{isLoading:!1,error:r});case E.a:return w({},e,{isLoadingGame:!0,error:""});case E.f:return w({},e,{isLoadingGame:!1,game:r});case E.e:return w({},e,{isLoadingGame:!1,error:r});default:return e}}}),L={};"undefined"!=typeof window&&(L=window.INITIAL_STATE||{},delete window.INITIAL_STATE);var A=Object(v.d)(j,L,Object(v.a)(O.a));window.main=function(){u.a.preloadReady().then(function(){Object(a.hydrate)(o.a.createElement(l.a,{store:A},o.a.createElement(c.a,null,Object(s.a)(y))),document.getElementById("app"))})}},33:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n(2),o=n.n(r);function a(e){return e.isLoading?e.timedOut?o.a.createElement("div",null,"Loader timed out!"):e.pastDelay?o.a.createElement("div",null,"Loading..."):null:e.error?o.a.createElement("div",null,"Error! Component failed to load"):null}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,